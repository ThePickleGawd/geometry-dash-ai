# See README for more details
import os

# Model
FRAME_STACK_SIZE = 4  # How many frames to stack in state, sent to model
COLOR_CHANNELS = 1
PREVIOUS_ACTION = True

# Agent
# CHANGED
DEFAULT_REWARD = 0.01
JUMP_PUNISHMENT = -0.2
DEATH_PUNISHMENT = -10
CHECKPOINT_REWARD = 0
BEATING_LEVEL = 100
NEW_STATE_REWARD = 100

# TCP Client
COMMAND_PORT = 22222  # Sends commands like "step, restart"
FRAME_PORT = 22223  # Receives frame buffer
BASE_URL = "127.0.0.1"

# Train settings
SAVE_EPOCH = 500
RANDOM_SPAWN_PERCENTAGE = 0.3
START_SPAWN_PERCENTAGE = 0.5
SET_SPAWN = 1

# Hyperparameters
STEPS_BEFORE_TARGET_UPDATE = 1000
ACTION_DIM = 2  # jump / no jump

LR = 1e-4
GAMMA = 0.99
EPSILON_START = 1
EPSILON_DECAY = 0.995
EPSILON_MIN = 0.01

BUFFER_SIZE = 10000
BATCH_SIZE = 12
DEATH_BATCH_SIZE = 4

NSTEP = 1
PERCENT_BUFFER_SIZE = 1000

# LLM / Qwen settings
QWEN_MODEL_PATH = os.environ.get("QWEN_MODEL_PATH", "Qwen/Qwen2.5-VL-3B-Instruct")
QWEN_PROMPT_GRID_SIZE = 8
QWEN_PROMPT_STR_THRESHOLD = 0.15
QWEN_MAX_PROMPT_TOKENS = 320
QWEN_ACTION_TOKENS = ("<stay>", "<jump>")

# DinoV3 settings
DINOV3_MODEL_ID = os.environ.get("DINOV3_MODEL_ID", "facebook/dinov3-vits16-pretrain-lvd1689m")
